name: apple-silicon build

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      ghc_version:
        description: "GHC version to install"
        required: true
        default: "9.4.8"
      cabal_version:
        description: "Cabal version to install"
        required: true
        default: "3.10.3.0"
  # push:
  #   branches:
  #     - main
  #   inputs:
  #     ghc_version:
  #       description: "GHC version to install"
  #       required: false
  #       default: "9.4.8"
  #     cabal_version:
  #       description: "Cabal version to install"
  #       required: false
  #       default: "3.10.3.0"

jobs:
  build:
    name: apple silicon binary
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install GHCup
        run: |
          brew install ghcup
          # Add GHCup to PATH for this and subsequent steps

      - name: Install Latest GHC and Cabal
        run: |
          ghcup install ghc ${{ inputs.ghc_version }}
          ghcup set ghc ${{ inputs.ghc_version }}
          ghcup install cabal ${{ inputs.cabal_version }}
          ghcup set cabal ${{ inputs.cabal_version }}
          echo "$HOME/.ghcup/bin" >> $GITHUB_PATH

      - name: Update Cabal Dependencies
        run: |
          cabal update

      - name: Build Binary
        run: |
          make clean-build

      - name: Reduce binary size
        run: |
          strip $(readlink -f ./release/chequera)

      - name: Get Version
        id: get_version
        run: |
          echo "version=$(./release/chequera version | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Create Tarball
        run: |
          tar -czvf chequera_darwin_arm64_v${{ steps.get_version.outputs.version }}.tar.gz -C ./release $(readlink ./-f release/chequera)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./chequera_darwin_arm64_v${{ steps.get_version.outputs.version }}.tar.gz
          asset_name: chequera_darwin_arm64_v${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
